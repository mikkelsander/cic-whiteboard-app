// <auto-generated />
using System;
using CIC.WhiteboardApp.Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace cic_whiteboard_app.Data.Migrations
{
    [DbContext(typeof(WhiteboardDbContext))]
    [Migration("20210209175738_offsetXAndY")]
    partial class offsetXAndY
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("CIC.WhiteboardApp.Data.Entities.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("OffsetX")
                        .HasColumnType("int");

                    b.Property<int>("OffsetY")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Cool post content...",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OffsetX = 0,
                            OffsetY = 0,
                            Title = "Cool Post Title",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "Cool post content 2...",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OffsetX = 0,
                            OffsetY = 0,
                            Title = "Cool Post Title 2",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Content = "Cool post content 3...",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OffsetX = 0,
                            OffsetY = 0,
                            Title = "Cool Post Title 3",
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            Content = "Cool post content 4...",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OffsetX = 0,
                            OffsetY = 0,
                            Title = "Cool Post Title 4",
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            Content = "Cool post content 5...",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OffsetX = 0,
                            OffsetY = 0,
                            Title = "Cool Post Title 5",
                            UserId = 2
                        },
                        new
                        {
                            Id = 6,
                            Content = "Cool post content 6...",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OffsetX = 0,
                            OffsetY = 0,
                            Title = "Cool Post Title 6",
                            UserId = 2
                        },
                        new
                        {
                            Id = 7,
                            Content = "Cool post content 7...",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OffsetX = 0,
                            OffsetY = 0,
                            Title = "Cool Post Title 7",
                            UserId = 1
                        },
                        new
                        {
                            Id = 8,
                            Content = "Cool post content 8...",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OffsetX = 0,
                            OffsetY = 0,
                            Title = "Cool Post Title 8",
                            UserId = 1
                        },
                        new
                        {
                            Id = 9,
                            Content = "Cool post content 9...",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OffsetX = 0,
                            OffsetY = 0,
                            Title = "Cool Post Title 9",
                            UserId = 2
                        },
                        new
                        {
                            Id = 10,
                            Content = "Cool post content 10...",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OffsetX = 0,
                            OffsetY = 0,
                            Title = "Cool Post Title 10",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("CIC.WhiteboardApp.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AzureActiveDirectoryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AzureActiveDirectoryId = "557ef0be-1b6a-4ce3-ad0e-49473dc086c5",
                            Name = "Sam",
                            UserRole = 1
                        },
                        new
                        {
                            Id = 2,
                            AzureActiveDirectoryId = "2c778e64-0b47-4f12-8e83-65c538045750",
                            Name = "Bertha",
                            UserRole = 0
                        });
                });

            modelBuilder.Entity("CIC.WhiteboardApp.Data.Entities.UserComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("UserComments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Cool comment content...",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "Cool comment content 2...",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Content = "Cool comment content...",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            Content = "Cool comment content...",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 4,
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            Content = "Cool comment content...",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 9,
                            UserId = 2
                        },
                        new
                        {
                            Id = 6,
                            Content = "Cool comment content...",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 4,
                            UserId = 2
                        },
                        new
                        {
                            Id = 7,
                            Content = "Cool comment content...",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 7,
                            UserId = 2
                        },
                        new
                        {
                            Id = 8,
                            Content = "Cool comment content...",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 6,
                            UserId = 2
                        },
                        new
                        {
                            Id = 9,
                            Content = "Cool comment content...",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 8,
                            UserId = 1
                        },
                        new
                        {
                            Id = 10,
                            Content = "Cool comment content...",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 10,
                            UserId = 2
                        },
                        new
                        {
                            Id = 11,
                            Content = "Cool comment content...",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 10,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("CIC.WhiteboardApp.Data.Entities.UserReaction", b =>
                {
                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("PostId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserReactions");

                    b.HasData(
                        new
                        {
                            PostId = 3,
                            UserId = 1,
                            Type = 0
                        },
                        new
                        {
                            PostId = 1,
                            UserId = 2,
                            Type = 0
                        },
                        new
                        {
                            PostId = 6,
                            UserId = 1,
                            Type = 0
                        },
                        new
                        {
                            PostId = 8,
                            UserId = 2,
                            Type = 0
                        },
                        new
                        {
                            PostId = 5,
                            UserId = 2,
                            Type = 0
                        });
                });

            modelBuilder.Entity("CIC.WhiteboardApp.Data.Entities.Post", b =>
                {
                    b.HasOne("CIC.WhiteboardApp.Data.Entities.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("User");
                });

            modelBuilder.Entity("CIC.WhiteboardApp.Data.Entities.UserComment", b =>
                {
                    b.HasOne("CIC.WhiteboardApp.Data.Entities.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CIC.WhiteboardApp.Data.Entities.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CIC.WhiteboardApp.Data.Entities.UserReaction", b =>
                {
                    b.HasOne("CIC.WhiteboardApp.Data.Entities.Post", null)
                        .WithMany("Reactions")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CIC.WhiteboardApp.Data.Entities.User", null)
                        .WithMany("Reactions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CIC.WhiteboardApp.Data.Entities.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Reactions");
                });

            modelBuilder.Entity("CIC.WhiteboardApp.Data.Entities.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Posts");

                    b.Navigation("Reactions");
                });
#pragma warning restore 612, 618
        }
    }
}
